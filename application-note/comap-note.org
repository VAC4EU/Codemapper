#+TITLE: CodeMapper: Semi-automatic coding of case definitions  
#+AUTHOR: BB, EM, MS, JO
#+EMAIL: b.becker@erasmusmc.nl
#+LANGUAGE:  en
#+OPTIONS: toc:nil H:5
#+LATEX_CLASS: koma-article
#+LATEX_HEADER: \input{mystyle.tex}
# #+LATEX_CLASS_OPTIONS: [a4paper,14pt,DIV=40]
# #+LATEX_HEADER: \addtokomafont{section}{\clearpage}
#+LATEX_HEADER: \doublespacing
* Introduction
**** Background
Epidemiological studies often combine evidence from electronic health
record (EHR) databases that use different coding systems to describe
medical information, such as READ, ICD-9, MedDRA or ICPC.  The event
to be analysed in a study is then first described textually by a case
definition and mapped into pertinent codes that represent the case
definition, for all relevant coding systems.  The codes are combined
into extraction algorithms to identify cases of the event in the EHR
databases. The code sets are then interactively optimised for each
database by collecting feedback from the database custodians.

Currently, the mapping of the case definition into codes is largely a
manual process.  This poses an important bottleneck to the rapid
implementation of epidemiological studies.  Furthermore, the mapping
process is not well documented impeding to understand in retrospect
the rationale of the inclusion or exclusion of particular codes.
**** Objective
We developed the web application /CodeMapper/ that assists the
creation of code sets from case definitions, for several coding
systems simultaneously while keeping a record of the complete mapping
process.  We evaluate the application by comparing code sets that were
automatically generated by CodeMapper with reference code sets that
were manually created.
**** Application workflow
The workflow of CodeMapper has three phases as shown in figure
[[fig:workflow]], and corresponds to the harmonisation process used in the
EU-ADR project
[[cite:avillach2013harmonization,avillach2009design]]. First, the user
enters a clinical case definition as free-text. The Peregrine text
indexing engine [[cite:Schuemie2007]] is used to find mentions of medical
concepts in the case definition.  Concepts that belong to the semantic
group of disorders in UMLS are preselected.  The user can further
specify individually which concepts should be included for further
processing.

#+CAPTION: The workflow of CodeMapper
#+NAME: fig:workflow
[[./comap-overview.tikz]]

Second, these concepts are related to concepts of the Unified Medical
Language System (UMLS) [[cite:Lindberg1993]]. The UMLS is then used to
automatically retrieve codes that correspond to the concepts in a set
of coding systems.  The concepts are displayed in a table alongside
the associated codes in each coding system.

Third, the user can revise codes of the mapping by applying
concept-level operations (a screen-shot is shown in figure
[[fig:screenshot]]).  The user can add concepts, remove concepts, and
retrieve more general or more specific concepts according to the
hierarchical information in the UMLS[fn:relations].  The set of
targeted coding systems can be changed on-the-fly.  After every
operation, the code sets associated with the concepts are
automatically updated.  Feedback about the mapping is captured in
comments that can be attached to the concepts.

Every operation is recorded in a history for later traceability.  When
saving her or his work, the user has to summary of the modifications.
The summary is added to the history.  The mapping, comprised of the
concepts and code sets is stored online together with the case
definition, the initial mapping and history.  All data can be
downloaded as an Excel document.
**** Availability
The CodeMapper application is freely available for non-commercial
projects at [[https://euadr.erasmusmc.nl/CoMap]] (\r{TODO} move to
abstract).

#+CAPTION: Screen-shot of the CodeMapper application
#+NAME: fig:screenshot
#+ATTR_LATEX: :width 0.8\textwidth
[[./screenshot.jpeg]]

[fn:relations] The UMLS-specific relations for hypernyms and hyponyms
(~NR~ and ~BR~) and the source vocabulary-specific relations (~PAR~
and ~CHD~) were taken into account.  A lower performance was found in
the evaluation when using only subsets of those relations for
expansion.

* Evaluation
**** Evaluation by simulation
CodeMapper cannot be evaluated directly, because the manual revision
step offers complete control of the mapping by adding and removing any
concept.  Also, domain-specific expertise of the event and the
targeted databases is required to decide the inclusion and exclusion
of specific concepts in the mapping.  Instead of a direct evaluation,
we carry out an evaluation by simulation to estimate the suitability
of CodeMapper for mapping case definitions: Is it feasible to derive
reference code sets from a case definition, by applying a limited set
of revision operations?

A mapping in CodeMapper is comprised of a set of UMLS concepts.  The
automatic reproduction of the reference code sets is implemented as a
search among consecutive variations of a mapping.  The mapping that
results only from indexing the case definition comprises the baseline
for the evaluation.  A variation of a mapping is created retrieving
more general and more specific concepts and including if they contain
codes from the reference code sets.  This procedure is to simulate the
informed usage of CodeMapper, i.e.\nbsp{}by a user who can judge the
relevance of expanded concepts.  For the evaluation, we consider the
/baseline/ mapping and its variations /expand_{i}/ that were created
by expanding the concepts successively /i/ times.
**** Performance measures
A mapping of an event is evaluated by comparing the code set that are
associated in each coding system with the concepts with the respective
reference code set.  This comparison yields the number of true
positive codes (TP), false positive codes (FP) and false negative
codes (FN).  The recall of a generated code set is defined as
$\text{TP} / (\text{TP} + \text{FN})$ and the precision is defined as
$\text{TP} / (\text{TP} + \text{FP})$.  Macro-averages of recall and
precision over events are reported for each coding systems.
**** The /maximum-recall/ mapping
The /maximum-recall/ mapping is a set of concepts that has a maximal
recall with optimal PPV.  It contains a concept for every code in the
reference code sets.  When several concepts are associated with a
code, only the concept that introduces the least number of false
positive codes is included.

This construction implies that the only false negative codes of the
/maximum-recall/ mapping are the codes in the references code sets
that are not assigned in the UMLS.  Its false positive codes are
co-synonym codes of true positives that are not in the reference code
sets.  (Cosynonyms of a code are the codes that are connected to the
same concept.)  The precision serves thus as measure of the
consistency of reference mapping between coding systems, assuming that
all equivalent codes are associated with one concept in the UMLS.
**** Error analysis
We carry out an error analysis of the generated code sets by assigning
an error category to every false positive and false negative code.
For false positives we distinguish between codes that have true
positive cosynonym codes, and those that have not.  By construction of
the evaluated mappings (/baseline/ and /expand_{i}/), false positive
codes without true positive cosynonyms are always result from false
positives of the indexing step.

For false negatives we distinguish between codes that are not assigned
in UMLS and cannot be generated by CodeMapper, database-specific codes
that do not have cosynonyms in any target coding system, and codes
that are generated by a subsequent expansion of the current mapping.
**** The reference mapping
We use code sets from the SAFEGUARD[fn:safeguard] project as a
reference for the evaluation.  We selected this project for the
variety of mapped events, the range of targeted coding systems in use
in the European Union and the United States, and the manual mapping
process that included review and feedback by database custodians.

The SAFEGUARD project provides textual case definitions for nine
events.  One event was excluded from the evaluation because the code
sets of many target coding systems were missing (sudden cardiac death;
the event was captured in only two EHR databases targeted in
SAFEGUARD).  One event was excluded because the textual case
definition is comprised of only a short symptomatic description of the
event (heart failure).  Table [[tbl:reference]] shows the retained events.

The events were mapped to code sets for six EHR databases with four
coding systems: Lombardy, Medicare, Puglia, PHARMO (all ICD-9
[[cite:icd9]]), GePaRD (ICD-10 [[cite:pavillon1992ICD10]]), IPCI (ICPC-2
[[cite:hofmans1996ICPC]]), and CPRD (READ-2, [[cite:schulz1996read2]]).
Differences between codes sets for databases with the same coding
system are due to characteristics of the databases (general
practitioner's vs. primary care) requiring the inclusion of
database-specific proxies and exclusion criteria.  Because mappings
are created in CodeMapper by coding systems, we selected only one code
set for each coding system (Medicare[fn:icd9], GePaRD, CPRD[fn:read2],
IPCI).

Overall, the reference code sets contains 438 codes for seven events
and four target coding systems (see table [[tbl:reference]]).  The size of
code sets differs between coding systems: The codes sets for READ-2
contain 48.33 codes at average and the code sets for ICPC-2 contain
only 3 codes at average.  This discrepancy is firstly due to the
differences of granularity of the coding systems (READ-2 has 77290
codes in UMLS and ICPC-2 has 1397).  Secondly, the queries to the IPCI
database (to which the ICPC-2 code sets are targeted) are supported
by keyword searches on the free-text portion of the medical record.

The name and the case definitions of the remaining events were
provided as an input to CodeMapper.  Exclusion codes where not taken
into account in the evaluation because they were not specified in the
textual case definitions but added based on the database-specific
needs.

#+CAPTION: Size of reference case definition and code sets
#+NAME: tbl:reference
#+begin_table
#+begin_threeparttable
#+ATTR_LATEX: :booktabs t :font \scriptsize :center nil :align @{}lrrrrrrr@{}
|                        | Case definition | \multicolumn{4}{c}{Code sets} |
| Event                  | (word count) | ICD-9 | ICD-10 | READ-2 | ICPC-2^{a)} |
|------------------------+--------------+-------+--------+--------+----------|
| Acute Pancreatitis     |           49 |     1 |      6 |      7 |        1 |
| Bladder cancer         |           87 |    12 |     12 |     91 |        4 |
| Hemorrhagic stroke     |           48 |     5 |     24 |     36 |        3 |
| Ischemic stroke        |           53 |    10 |     11 |     20 |        3 |
| Myocardial Infarction  |           39 |    12 |      7 |    -^{b)} |        7 |
| Pancreatic Cancer      |           19 |     8 |      9 |    109 |        2 |
| Ventricular Arrhythmia |          234 |     5 |      5 |     27 |        1 |
|------------------------+--------------+-------+--------+--------+----------|
| Sum                    |          529 |    53 |     74 |    290 |       21 |
| Average                |        75.57 |  7.57 |  10.57 |  48.33 |        3 |
#+TBLFM: @10$2=vsum(@3..@9)::@11$2=round(vmean(@3..@9), 2)
#+begin_tablenotes
[flushleft]
\scriptsize
\item[a)] Additional text-based queries
\item[b)] Text-based query only
#+end_tablenotes
#+end_threeparttable
#+end_table

[fn:safeguard] \r{TODO} How to refer to SAFEGUARD? Grant agreement
HEALTH-282521

[fn:icd9] Because the code sets uses code from ICD-9 and ICD-9/CM we
integrated a target coding system in CodeMapper that is the union of
ICD-9 and ICD-9/CM.

[fn:read2] To generate READ-2 codes which are not part of the UMLS, an
additional translation table between READ version 2 and version 3 is
integrated into CodeMapper
* Results
**** Baseline
The /baseline/ mapping has a sensitivity of 0.297 for generating the
reference code sets (average over all databases, see table
[[tbl:performance]] in appendix).  The average PPV of the baseline is
0.570.

The target coding systems focus on diagnostics and provide only few
false positive codes.  The overall performance differs only slightly
without filtering concepts by their semantic group (sensitivity 0.299,
PPV 0.535).  The filtering is still viable because irrelevant concepts
are avoided: Whereas only 6.9% of the concepts contribute true
positive codes before filtering, 30.9% of the concepts do so after
filtering.
**** Maximum-recall
The /maximum-recall/ mapping has an average sensitivity of 0.982.  All
false negative codes belong to the READ-2 code set (N=21 in all
events, N=14 unique READ-2 codes).  The READ-2 codes are missed out
because the translation to READ-3 code is missing or not available in
the UMLS.  The PPV of /maximum-recall/ is 0.744.
**** Concept expansion
The sensitivity was improved by expanding the concepts of the baseline
mapping to related concepts in one step (/expand_{1}/, 0.851), two
steps (/expand_{2}/, 0.921) and three steps (/expand_{3}/, 0.940) (see
figure [[fig:steps-recall]]).  The PPV improved after one expansion step
(0.600) and decreased slightly after two (0.539) or three (0.534)
expansion steps.  A fourth expansion step resulted in only marginal
improvement of performance (sensitivity 0.941, recall 0.533).

#+CAPTION: Recall of the expanded mappings
#+NAME: fig:steps-recall
#+ATTR_LATEX: :width 0.6\textwidth
[[./safeguard-steps-recall-by-db.pdf]]
**** Error analysis of /expand_{3}/
False positive codes of /expand_{3}/ were generated in all coding
systems (see table [[tbl:fp]]).  Most of them are cosynonyms of reference
codes (N=644; 87.4%).  To a smaller extend the false positive codes
result from false positive concepts obtained by indexing errors (N=93;
12.6%).  Whereas false positive due to indexing are equally
distributed between coding systems, the amount of cosynonym false
positives is influenced by the granularity of the underlying coding
system.

False negative codes were generated only for READ-2 and ICD-9 (see
table [[tbl:fn]]).  Most false negative codes are READ-2 codes that could
not be mapped to UMLS concepts (N=21; 47.7%).  They correspond to the
false negatives of /maximum-recall/.  Other false negative codes are
database specific (N=19; 43.2%) (including N=\r{TODO} codes of
proxies).  Concepts that are not connected to /expand_{3}/ would need
to be added to generated these codes.  Few codes are generated in a
fourth expansion step (N=4; 9.1%).

#+CAPTION: Error analysis of false positive codes in /expand_{3}/
#+NAME: tbl:fp
#+ATTR_LATEX: :booktabs t :font \scriptsize :align @{}llrr@{}
| Database | Category  | \mc{False positives} |
|----------+-----------+--------------+-------+
| ICD-9    | Cosynonym |           91 | 12.3% |
|          | Indexing  |           25 |  3.4% |
| ICD-10   | Cosynonym |          152 | 20.6% |
|          | Indexing  |           47 |  6.4% |
| ICPC-2   | Cosynonym |            7 |  0.9% |
|          | Indexing  |            1 |  0.1% |
| READ-2   | Cosynonym |          394 | 53.5% |
|          | Indexing  |           20 |  2.7% |
| Overall  | Cosynonym |          644 | 87.4% |
|          | Indexing  |           93 | 12.6% |

#+CAPTION: Error analysis of false negative codes in /expand_{3}/
#+NAME: tbl:fn
#+ATTR_LATEX: :booktabs t :font \scriptsize :align @{}llrr@{}
| Database | Category    | \mc{False negatives} |
|----------+-------------+--------------+-------|
| READ-2   | Not in UMLS |          21  | 47.7% |
|          | DB specific |          13  | 29.5% |
|          | expand_{4}     |           4  |  9.1% |
| ICD-9    | DB specific |           6  | 13.6% |
| Overall  | Not in UMLS |          21  | 47.7% |
|          | DB specific |          19  | 43.2% |
|          | expand_{4}     |           4  |  9.1% |
* Discussion
In this article we presented the CodeMapper web application that
assists the mapping of textual case definitions to code sets in
several coding systems at once, and we showed its effectiveness by
simulating an informed usage.
**** Manual mapping is necessary and effective
An automatic mapping created by only searching medical concepts in the
case definition showed a low performance to reproduce the reference
code sets.  The process of multi-database coding of case definitions
cannot be replaced by a simple indexing step, and manual revision of
the mapping is necessary.  But CodeMapper's operations for retrieving
related concepts provide an effective and efficient way to generate
realistic code sets.  The sensitivity of the mapping approaches its
maximum after three rounds of expansion.  Only the generation of
database-specific codes that are not directly related to the case
definition requires adding further supplementary concepts.
**** Improved equivalence of code sets between databases
The PPV of the expanded mappings should seen in the light of the PPV
of the /maximum-recall/ mapping.  This is maximal PPV one can obtain
by the presented approach optimising for maximal sensitivity.  The
largest portion of false positive codes were cosynonyms of true
positive codes.  Assuming that codes that are connected to one UMLS
concept are equivalent, it might even improve the equivalence between
coding systems to include those in a mapping.
**** Further steps
Future version of the application will contain additional strategies
for relevant concepts, such as the retrieval of concepts that are used
as proxies of the event (i.e., drugs for specific diseases), and
concepts with codes that co-occur with codes of available concepts.
Furthermore, CodeMapper could help the construction of extraction
algorithms instead of only generating unstructured code sets, such as
simple database queries to simplify feedback about the incidence of
codes in databases.  This can be extended to the processing of
structured case definitions (e.g.,
[[cite:ruggeberg2007anaphylaxis,poli2013narcolepsy]]) where generated code
sets are compiled to an extraction algorithm according to the logical
structure of the case definition.
# Many EHR databases contain also free-text and the extraction
# algorithms include keywords.  CodeMapper could help the suggesting
# keywords from UMLS terms.
* Acknowledgement
The application was developed in the ADVANCE project.

#+BIBLIOGRAPHY: references alpha

\clearpage
* Appendix
:PROPERTIES:
:UNNUMBERED: t
:END:
#+CAPTION: Performance measures of the CodeMapper evaluation
#+NAME: tbl:performance
#+ATTR_LATEX: :booktabs t :font \scriptsize :align @{}llrrrrr@{}
|                  |             | READ-2 | ICD-10 | ICPC-2 | ICD-9 | Average |
|------------------+-------------+--------+--------+--------+-------+---------|
| /baseline/       | Sensitivity |  0.124 |  0.174 |  0.175 | 0.295 |   0.192 |
|                  | PPV         |  0.458 |  0.491 |  0.700 | 0.514 |   0.541 |
| /maximum-recall/ | Sensitivity |  0.930 |  0.938 |  1.000 | 0.988 |   0.964 |
|                  | PPV         |  0.861 |  0.568 |  0.924 | 0.559 |   0.728 |
| /expand_{1}/     | Sensitivity |  0.592 |  0.724 |  0.556 | 0.859 |   0.683 |
|                  | PPV         |  0.645 |  0.537 |  0.743 | 0.499 |   0.606 |
| /expand_{2}/     | Sensitivity |  0.786 |  0.829 |  0.603 | 0.888 |   0.777 |
|                  | PPV         |  0.545 |  0.478 |  0.707 | 0.425 |   0.539 |
| /expand_{3}/     | Sensitivity |  0.849 |  0.876 |  0.603 | 0.902 |   0.808 |
|                  | PPV         |  0.527 |  0.476 |  0.707 | 0.428 |   0.535 |
#+TBLFM: $7=round(vmean($3..$6), 3)
